{"version":3,"file":"app/api/chat/transaction-analysis/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,gXCGO,IAAMC,EAAU,OAEhB,eAAeC,EAAKC,CAAY,EACrC,GAAM,CAAEC,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAAE,CAAG,MAAMF,EAAIG,IAAI,GAEvCC,EAAe,CAAC;;;;;;;;;;;mBAWL,EAAEF,EAAWG,KAAKC,SAAS,CAACJ,GAAY,wBAAwB;;;;;;;;;;;;;;;wSAeqN,CAAC,CAUvS,MAAOK,CARQ,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,CAC9BC,MAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAO,eACdC,OAAQP,EACRH,SAAAA,EACAW,UAAW,IACXC,YAAa,EACf,IAEcC,kBAAkB,EAClC,CCtCA,IAAAC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,uCACAC,SAAA,iCACAC,SAAA,QACAC,WAAA,yCACA,EACAC,iBAAA,qHACAC,iBAVA,GAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,EAAiElB,EACzEmB,EAAA,uCACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBJ,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAM,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM5B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/chat/transaction-analysis/route.ts","webpack://_N_E/./app/api/chat/transaction-analysis/route.ts?0bdd","webpack://_N_E/?aa0b"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { openai } from '@ai-sdk/openai'\nimport { streamText } from 'ai'\n\nexport const runtime = 'edge'\n\nexport async function POST(req: Request) {\n  const { messages, userData } = await req.json()\n\n  const systemPrompt = `You are the Transaction Analysis Agent for the Chainweb ZK Reputation System. You specialize in deep analysis of blockchain transactions across DeFi (Chain 20), Gaming (Chain 21), and Development (Chain 22) domains on Kadena's Chainweb EVM.\n\nYour expertise includes:\n- Detailed transaction pattern analysis and anomaly detection\n- Gas optimization and transaction efficiency analysis\n- Smart contract interaction analysis\n- Transaction timing and frequency optimization\n- Cross-chain transaction correlation analysis\n- MEV (Maximum Extractable Value) identification\n- Transaction cost-benefit analysis\n\nUser Data Context: ${userData ? JSON.stringify(userData) : 'No user data provided'}\n\nTransaction Analysis Focus Areas:\n- DeFi Chain: DEX trades, liquidity provisions, lending/borrowing, yield farming patterns\n- Gaming Chain: NFT trades, game asset transfers, achievement unlocks, marketplace interactions\n- Development Chain: Contract deployments, function calls, testing patterns, upgrade transactions\n\nKey Metrics You Analyze:\n- Transaction frequency and timing patterns\n- Gas usage efficiency and optimization opportunities\n- Value transfer patterns and amounts\n- Smart contract interaction complexity\n- Failed transaction analysis and prevention\n- Transaction batching opportunities\n\nAlways provide detailed technical analysis with specific recommendations for transaction optimization. Use data-driven insights and explain the technical reasoning behind your analysis. Focus on helping users understand their transaction behavior and optimize for both cost and reputation impact.`\n\n  const result = await streamText({\n    model: openai('gpt-4o-mini') as any,\n    system: systemPrompt,\n    messages,\n    maxTokens: 1000,\n    temperature: 0.7,\n  })\n\n  return result.toAIStreamResponse()\n}\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/ayush/Documents/hackathons/croissant-eth/kadena_croissant/agents/app/api/chat/transaction-analysis/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/chat/transaction-analysis/route\",\n        pathname: \"/api/chat/transaction-analysis\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/transaction-analysis/route\"\n    },\n    resolvedPagePath: \"/Users/ayush/Documents/hackathons/croissant-eth/kadena_croissant/agents/app/api/chat/transaction-analysis/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chat/transaction-analysis/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fchat%2Ftransaction-analysis%2Froute&page=%2Fapi%2Fchat%2Ftransaction-analysis%2Froute&pagePath=private-next-app-dir%2Fapi%2Fchat%2Ftransaction-analysis%2Froute.ts&appDir=%2FUsers%2Fayush%2FDocuments%2Fhackathons%2Fcroissant-eth%2Fkadena_croissant%2Fagents%2Fapp&appPaths=%2Fapi%2Fchat%2Ftransaction-analysis%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/chat/transaction-analysis/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","runtime","POST","req","messages","userData","json","systemPrompt","JSON","stringify","result","streamText","model","openai","system","maxTokens","temperature","toAIStreamResponse","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fchat_2Ftransaction_analysis_2Froute_ts_page_2Fapi_2Fchat_2Ftransaction_analysis_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGY2hhdCUyRnRyYW5zYWN0aW9uLWFuYWx5c2lzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGdHJhbnNhY3Rpb24tYW5hbHlzaXMlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNoYXQlMkZ0cmFuc2FjdGlvbi1hbmFseXNpcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmF5dXNoJTJGRG9jdW1lbnRzJTJGaGFja2F0aG9ucyUyRmNyb2lzc2FudC1ldGglMkZrYWRlbmFfY3JvaXNzYW50JTJGYWdlbnRzJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRmNoYXQlMkZ0cmFuc2FjdGlvbi1hbmFseXNpcyUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEIQ_3D_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}